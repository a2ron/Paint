package paint;

import Formas.Forma.tipoForma;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import paint.Lienzo.Convolucion;
import paint.Lienzo.Degradado;
import paint.Lienzo.Funcion;
import paint.Lienzo.Transformacion;

public class Ventana_Principal extends javax.swing.JFrame {

    private class Manejador_Escritorio extends javax.swing.DefaultDesktopManager{
        @Override
        public void activateFrame(JInternalFrame f){
            super.activateFrame(f);
            if(f==v_operaciones || f==v_atributos || f==v_herramientas || f==v_confirmacion){
                if(vlienzo!=null)
                  esperarConfirmacion(vlienzo.getLienzo().esperaConfirmacionOp());
                return;
            }
            //conectar las ventanas de herramientas/operaciones con la ventana de lienzo actual
            vlienzo = (Ventana_Lienzo)(f);
            setAtributos();
            selectForma();
            esperarConfirmacion(vlienzo.getLienzo().esperaConfirmacionOp());
        }

        @Override
        public void deactivateFrame(JInternalFrame f){
            super.deactivateFrame(f);
            //desactivar la herramienta para editar la ultima forma (si esta activa)
            if(vlienzo==null)
                return;
            /*vlienzo.getLienzo().setEditar(false);
            if(b_actualizar.isSelected()){
                formas.clearSelection();
                b_lapiz.setSelected(true);
            }*/
        }

        @Override
        public void endDraggingFrame(JComponent f){
            super.endDraggingFrame(f);
            if(f==v_operaciones)
                this.setBoundsForFrame(v_confirmacion, v_operaciones.getX(),
                                                        v_operaciones.getY(),
                                                        v_confirmacion.getWidth(),
                                                        v_confirmacion.getHeight());
            else if(f==v_confirmacion)
                this.setBoundsForFrame(v_operaciones, v_confirmacion.getX(),
                                                        v_confirmacion.getY(),
                                                        v_operaciones.getWidth(),
                                                        v_operaciones.getHeight());
        }

        @Override
        public void closeFrame(JInternalFrame f){
            int res = JOptionPane.showConfirmDialog(escritorio,"¿Desea guardar los cambios?",
                                                    "Salir",JOptionPane.YES_NO_OPTION);
            switch(res){
                case JOptionPane.YES_OPTION: b_guardarActionPerformed(null);
                case JOptionPane.NO_OPTION:
                    super.closeFrame(f);
                    vlienzo=null;
                    esperarConfirmacion(false);
                    activateFrame(escritorio.getSelectedFrame());
                    num--;
                    break;
            }
        }
    }

    private Ventana_Lienzo vlienzo=null;
    private int num=0;
    private String texto = null;
    private static final String[] FONTS = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
    private Boolean no_redimensiones = false;

    public Ventana_Principal(){
        initComponents();
        manejador = new Manejador_Escritorio();
        escritorio.setDesktopManager(manejador);
        this.setTitle("Spaint");
        v_operaciones.setTitle("Operaciones");
        v_atributos.setTitle("Atributos");
        v_herramientas.setTitle("Herramientas");
        v_confirmacion.setTitle("Confirmar");
        esperarConfirmacion(false);
        p_degradados.setVisible(false);
        b_lapiz.setSelected(true);
        texto = "Escriba aqui";
        fuentes.setModel(new javax.swing.DefaultComboBoxModel(FONTS));
        fuentesActionPerformed(null);
        spinner_sizeStateChanged(null);
        setFontStyle();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        operaciones = new javax.swing.ButtonGroup();
        degradados = new javax.swing.ButtonGroup();
        formas = new javax.swing.ButtonGroup();
        g_colores = new javax.swing.ButtonGroup();
        menu_degradados = new javax.swing.ButtonGroup();
        escritorio = new javax.swing.JDesktopPane();
        v_operaciones = new javax.swing.JInternalFrame();
        p_pestañas = new javax.swing.JTabbedPane();
        p_basicos = new javax.swing.JPanel();
        logaritmo = new javax.swing.JRadioButton();
        negativo = new javax.swing.JRadioButton();
        contraste = new javax.swing.JRadioButton();
        byn = new javax.swing.JRadioButton();
        gamma = new javax.swing.JRadioButton();
        p_brillo = new javax.swing.JPanel();
        l_brillo = new javax.swing.JLabel();
        slider_brillo = new javax.swing.JSlider();
        p_efectos = new javax.swing.JPanel();
        dibujo = new javax.swing.JRadioButton();
        repujar = new javax.swing.JRadioButton();
        detect_fr = new javax.swing.JRadioButton();
        realce = new javax.swing.JRadioButton();
        sua_avanzado = new javax.swing.JRadioButton();
        sua_simple = new javax.swing.JRadioButton();
        p_dimensiones = new javax.swing.JPanel();
        p_dimensiones_top = new javax.swing.JPanel();
        p_rotar = new javax.swing.JPanel();
        l_rotar = new javax.swing.JLabel();
        slider_rotar = new javax.swing.JSlider();
        p_zoom = new javax.swing.JPanel();
        l_zoom = new javax.swing.JLabel();
        slider_zoom = new javax.swing.JSlider();
        p_checkbox_dimensiones = new javax.swing.JPanel();
        l_estirar = new javax.swing.JRadioButton();
        l_trasladar = new javax.swing.JRadioButton();
        l_redimensionar = new javax.swing.JRadioButton();
        p_slideres = new javax.swing.JPanel();
        trasladadores = new javax.swing.JPanel();
        sli_trasladar_ancho = new javax.swing.JSlider();
        sli_trasladar_alto = new javax.swing.JSlider();
        b_ok_trasladar = new javax.swing.JButton();
        estiradores = new javax.swing.JPanel();
        sli_estirar_ancho = new javax.swing.JSlider();
        sli_estirar_alto = new javax.swing.JSlider();
        b_ok_estirar = new javax.swing.JButton();
        p_redimension = new javax.swing.JPanel();
        p_spinners_redim = new javax.swing.JPanel();
        spinner_ancho = new javax.swing.JSpinner();
        l_X = new javax.swing.JLabel();
        spinner_alto = new javax.swing.JSpinner();
        p_ok = new javax.swing.JPanel();
        b_ok_redimen = new javax.swing.JButton();
        v_atributos = new javax.swing.JInternalFrame();
        colores = new javax.swing.JPanel();
        b_color = new javax.swing.JButton();
        b_color1 = new javax.swing.JButton();
        b_color2 = new javax.swing.JButton();
        b_color3 = new javax.swing.JButton();
        b_color4 = new javax.swing.JButton();
        b_color5 = new javax.swing.JButton();
        b_color6 = new javax.swing.JButton();
        b_color7 = new javax.swing.JButton();
        b_color8 = new javax.swing.JButton();
        b_color9 = new javax.swing.JButton();
        b_color10 = new javax.swing.JButton();
        b_color11 = new javax.swing.JButton();
        b_color12 = new javax.swing.JButton();
        b_color13 = new javax.swing.JButton();
        b_selectorColor = new javax.swing.JButton();
        degradado = new javax.swing.JCheckBox();
        vistaPrevia = new paint.VistaPrevia();
        spinner_grosor = new javax.swing.JSpinner();
        l_grosor = new javax.swing.JLabel();
        rellenar = new javax.swing.JCheckBox();
        p_degradados = new javax.swing.JPanel();
        deg_horizontal = new javax.swing.JRadioButton();
        deg_diagonal1 = new javax.swing.JRadioButton();
        deg_diagonal2 = new javax.swing.JRadioButton();
        deg_vertical = new javax.swing.JRadioButton();
        l_transparencia = new javax.swing.JLabel();
        sl_transparencia = new javax.swing.JSlider();
        check_puntear = new javax.swing.JCheckBox();
        fuentes = new javax.swing.JComboBox();
        l_transparencia1 = new javax.swing.JLabel();
        spinner_size = new javax.swing.JSpinner();
        b_bold = new javax.swing.JToggleButton();
        b_italic = new javax.swing.JToggleButton();
        v_herramientas = new javax.swing.JInternalFrame();
        b_deshacer = new javax.swing.JButton();
        b_lapiz = new javax.swing.JToggleButton();
        b_recta = new javax.swing.JToggleButton();
        b_rectangulo = new javax.swing.JToggleButton();
        b_round_rect = new javax.swing.JToggleButton();
        b_elipse = new javax.swing.JToggleButton();
        b_curva1 = new javax.swing.JToggleButton();
        b_curva2 = new javax.swing.JToggleButton();
        b_texto = new javax.swing.JToggleButton();
        b_actualizar = new javax.swing.JToggleButton();
        b_rehacer = new javax.swing.JButton();
        v_confirmacion = new javax.swing.JInternalFrame();
        msg_warning = new javax.swing.JLabel();
        aplicar_op = new javax.swing.JButton();
        deshacer_op = new javax.swing.JButton();
        barra_menu = new javax.swing.JMenuBar();
        b_archivo = new javax.swing.JMenu();
        b_nuevo = new javax.swing.JMenuItem();
        b_abrir = new javax.swing.JMenuItem();
        b_guardar = new javax.swing.JMenuItem();
        b_salir = new javax.swing.JMenuItem();
        b_editar = new javax.swing.JMenu();
        m_deshacer = new javax.swing.JMenuItem();
        m_rehacer = new javax.swing.JMenuItem();
        m_actualizar = new javax.swing.JMenuItem();
        b_formas = new javax.swing.JMenu();
        m_lapiz = new javax.swing.JMenuItem();
        m_linea = new javax.swing.JMenuItem();
        m_rect = new javax.swing.JMenuItem();
        m_rect_round = new javax.swing.JMenuItem();
        m_elipse = new javax.swing.JMenuItem();
        m_curva1 = new javax.swing.JMenuItem();
        m_curva2 = new javax.swing.JMenuItem();
        m_texto = new javax.swing.JMenuItem();
        b_atributos = new javax.swing.JMenu();
        m_color = new javax.swing.JMenuItem();
        m_color2 = new javax.swing.JMenuItem();
        m_grosor = new javax.swing.JMenu();
        mas_grosor = new javax.swing.JMenuItem();
        menos_grosor = new javax.swing.JMenuItem();
        m_punteo = new javax.swing.JCheckBoxMenuItem();
        m_transparencia = new javax.swing.JMenu();
        mas_transparencia = new javax.swing.JMenuItem();
        menos_transparencia = new javax.swing.JMenuItem();
        m_relleno = new javax.swing.JCheckBoxMenuItem();
        m_degradados = new javax.swing.JMenu();
        m_deghoz = new javax.swing.JRadioButtonMenuItem();
        m_degver = new javax.swing.JRadioButtonMenuItem();
        m_degd1 = new javax.swing.JRadioButtonMenuItem();
        m_degd2 = new javax.swing.JRadioButtonMenuItem();
        m_formato = new javax.swing.JMenu();
        m_negrita = new javax.swing.JCheckBoxMenuItem();
        m_cursiva = new javax.swing.JCheckBoxMenuItem();
        m_tamanio = new javax.swing.JMenu();
        mas_tamanio = new javax.swing.JMenuItem();
        menos_tamanio = new javax.swing.JMenuItem();
        b_ayuda = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spaint");
        setMinimumSize(new java.awt.Dimension(1000, 650));
        getContentPane().setLayout(new java.awt.BorderLayout(2, 2));

        escritorio.setBackground(new java.awt.Color(240, 240, 240));
        escritorio.setMinimumSize(new java.awt.Dimension(500, 200));

        v_operaciones.setPreferredSize(new java.awt.Dimension(208, 0));
        v_operaciones.setVisible(true);

        p_basicos.setLayout(new java.awt.GridLayout(9, 0));

        operaciones.add(logaritmo);
        logaritmo.setText("Funcion Logaritmo");
        logaritmo.addActionListener(formListener);
        p_basicos.add(logaritmo);

        operaciones.add(negativo);
        negativo.setText("Invertir Colores");
        negativo.addActionListener(formListener);
        p_basicos.add(negativo);

        operaciones.add(contraste);
        contraste.setText("Aumentar Constraste");
        contraste.addActionListener(formListener);
        p_basicos.add(contraste);

        operaciones.add(byn);
        byn.setText("Blanco y Negro");
        byn.addActionListener(formListener);
        p_basicos.add(byn);

        operaciones.add(gamma);
        gamma.setText("Gamma");
        gamma.addActionListener(formListener);
        p_basicos.add(gamma);

        l_brillo.setText("Brillo");
        p_brillo.add(l_brillo);

        slider_brillo.setMaximum(255);
        slider_brillo.setMinimum(-255);
        slider_brillo.setValue(0);
        slider_brillo.setMinimumSize(new java.awt.Dimension(200, 120));
        slider_brillo.addMouseListener(formListener);
        slider_brillo.addMouseMotionListener(formListener);
        p_brillo.add(slider_brillo);

        p_basicos.add(p_brillo);

        p_pestañas.addTab("Colores", p_basicos);

        p_efectos.setLayout(new java.awt.GridLayout(9, 0));

        operaciones.add(dibujo);
        dibujo.setText("Efecto Dibujo                         ");
        dibujo.addActionListener(formListener);
        p_efectos.add(dibujo);

        operaciones.add(repujar);
        repujar.setText("Efecto Relieve        ");
        repujar.addActionListener(formListener);
        p_efectos.add(repujar);

        operaciones.add(detect_fr);
        detect_fr.setText("Detección de Fronteras");
        detect_fr.addActionListener(formListener);
        p_efectos.add(detect_fr);

        operaciones.add(realce);
        realce.setText("Enfocar");
        realce.addActionListener(formListener);
        p_efectos.add(realce);

        operaciones.add(sua_avanzado);
        sua_avanzado.setText("Desenfocar (binomial)");
        sua_avanzado.addActionListener(formListener);
        p_efectos.add(sua_avanzado);

        operaciones.add(sua_simple);
        sua_simple.setText("Desenfocar (media)");
        sua_simple.addActionListener(formListener);
        p_efectos.add(sua_simple);

        p_pestañas.addTab("Efectos", p_efectos);

        p_dimensiones.setLayout(new java.awt.BorderLayout());

        p_dimensiones_top.setLayout(new java.awt.GridLayout(3, 0));

        l_rotar.setText("Rotar");
        p_rotar.add(l_rotar);

        slider_rotar.setMajorTickSpacing(90);
        slider_rotar.setMaximum(360);
        slider_rotar.setMinorTickSpacing(45);
        slider_rotar.setPaintTicks(true);
        slider_rotar.setPaintTrack(false);
        slider_rotar.setValue(0);
        slider_rotar.setMinimumSize(new java.awt.Dimension(160, 33));
        slider_rotar.setPreferredSize(new java.awt.Dimension(160, 33));
        slider_rotar.addMouseListener(formListener);
        slider_rotar.addMouseMotionListener(formListener);
        p_rotar.add(slider_rotar);

        p_dimensiones_top.add(p_rotar);

        l_zoom.setText("Zoom");
        p_zoom.add(l_zoom);

        slider_zoom.setMaximum(400);
        slider_zoom.setMinimum(1);
        slider_zoom.setValue(100);
        slider_zoom.setMinimumSize(new java.awt.Dimension(160, 23));
        slider_zoom.setPreferredSize(new java.awt.Dimension(160, 23));
        slider_zoom.addMouseListener(formListener);
        slider_zoom.addMouseMotionListener(formListener);
        p_zoom.add(slider_zoom);

        p_dimensiones_top.add(p_zoom);

        operaciones.add(l_estirar);
        l_estirar.setText("Estirar");
        l_estirar.addActionListener(formListener);
        p_checkbox_dimensiones.add(l_estirar);

        operaciones.add(l_trasladar);
        l_trasladar.setText("Trasladar");
        l_trasladar.addActionListener(formListener);
        p_checkbox_dimensiones.add(l_trasladar);

        operaciones.add(l_redimensionar);
        l_redimensionar.setText("Redimensionar");
        l_redimensionar.addActionListener(formListener);
        p_checkbox_dimensiones.add(l_redimensionar);

        p_dimensiones_top.add(p_checkbox_dimensiones);

        p_dimensiones.add(p_dimensiones_top, java.awt.BorderLayout.PAGE_START);

        sli_trasladar_ancho.setMaximum(200);
        sli_trasladar_ancho.setMinimum(-200);
        sli_trasladar_ancho.setValue(0);
        sli_trasladar_ancho.setMinimumSize(new java.awt.Dimension(50, 23));
        sli_trasladar_ancho.setPreferredSize(new java.awt.Dimension(160, 23));
        sli_trasladar_ancho.addMouseMotionListener(formListener);

        sli_trasladar_alto.setMaximum(200);
        sli_trasladar_alto.setMinimum(-200);
        sli_trasladar_alto.setValue(0);
        sli_trasladar_alto.setMinimumSize(new java.awt.Dimension(50, 23));
        sli_trasladar_alto.setPreferredSize(new java.awt.Dimension(160, 23));
        sli_trasladar_alto.addMouseMotionListener(formListener);

        b_ok_trasladar.setText("Ok");
        b_ok_trasladar.addActionListener(formListener);

        javax.swing.GroupLayout trasladadoresLayout = new javax.swing.GroupLayout(trasladadores);
        trasladadores.setLayout(trasladadoresLayout);
        trasladadoresLayout.setHorizontalGroup(
            trasladadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sli_trasladar_ancho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(sli_trasladar_alto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(trasladadoresLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(b_ok_trasladar))
        );
        trasladadoresLayout.setVerticalGroup(
            trasladadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, trasladadoresLayout.createSequentialGroup()
                .addComponent(sli_trasladar_ancho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sli_trasladar_alto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_ok_trasladar)
                .addGap(12, 12, 12))
        );

        p_slideres.add(trasladadores);

        sli_estirar_ancho.setMaximum(200);
        sli_estirar_ancho.setMinimum(-200);
        sli_estirar_ancho.setValue(0);
        sli_estirar_ancho.setMinimumSize(new java.awt.Dimension(50, 23));
        sli_estirar_ancho.setPreferredSize(new java.awt.Dimension(160, 23));
        sli_estirar_ancho.addMouseMotionListener(formListener);

        sli_estirar_alto.setMaximum(200);
        sli_estirar_alto.setMinimum(-200);
        sli_estirar_alto.setValue(0);
        sli_estirar_alto.setMinimumSize(new java.awt.Dimension(50, 23));
        sli_estirar_alto.setPreferredSize(new java.awt.Dimension(160, 23));
        sli_estirar_alto.addMouseMotionListener(formListener);

        b_ok_estirar.setText("Ok");
        b_ok_estirar.addActionListener(formListener);

        javax.swing.GroupLayout estiradoresLayout = new javax.swing.GroupLayout(estiradores);
        estiradores.setLayout(estiradoresLayout);
        estiradoresLayout.setHorizontalGroup(
            estiradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sli_estirar_ancho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(sli_estirar_alto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(estiradoresLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(b_ok_estirar))
        );
        estiradoresLayout.setVerticalGroup(
            estiradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, estiradoresLayout.createSequentialGroup()
                .addComponent(sli_estirar_ancho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sli_estirar_alto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_ok_estirar)
                .addGap(12, 12, 12))
        );

        p_slideres.add(estiradores);

        p_redimension.setLayout(new java.awt.GridLayout(2, 0));

        spinner_ancho.setMinimumSize(new java.awt.Dimension(60, 20));
        spinner_ancho.setPreferredSize(new java.awt.Dimension(60, 20));
        spinner_ancho.setValue(300);
        spinner_ancho.addChangeListener(formListener);
        p_spinners_redim.add(spinner_ancho);

        l_X.setText("X");
        p_spinners_redim.add(l_X);

        spinner_alto.setMinimumSize(new java.awt.Dimension(60, 20));
        spinner_alto.setPreferredSize(new java.awt.Dimension(60, 20));
        spinner_alto.setValue(300);
        spinner_alto.addChangeListener(formListener);
        p_spinners_redim.add(spinner_alto);

        p_redimension.add(p_spinners_redim);

        b_ok_redimen.setText("Ok");
        b_ok_redimen.addActionListener(formListener);
        p_ok.add(b_ok_redimen);

        p_redimension.add(p_ok);

        p_slideres.add(p_redimension);

        p_dimensiones.add(p_slideres, java.awt.BorderLayout.CENTER);

        p_pestañas.addTab("Dimensiones", p_dimensiones);

        v_operaciones.getContentPane().add(p_pestañas, java.awt.BorderLayout.CENTER);

        v_operaciones.setBounds(680, 20, 290, 310);
        escritorio.add(v_operaciones, javax.swing.JLayeredPane.DEFAULT_LAYER);

        v_atributos.setPreferredSize(new java.awt.Dimension(208, 0));
        v_atributos.setVisible(true);

        colores.setLayout(new java.awt.GridLayout(3, 0, 1, 1));

        b_color.setBackground(new java.awt.Color(0, 0, 0));
        b_color.addMouseListener(formListener);
        colores.add(b_color);

        b_color1.setBackground(new java.awt.Color(0, 0, 204));
        b_color1.addMouseListener(formListener);
        colores.add(b_color1);

        b_color2.setBackground(new java.awt.Color(153, 0, 153));
        b_color2.addMouseListener(formListener);
        colores.add(b_color2);

        b_color3.setBackground(new java.awt.Color(153, 51, 0));
        b_color3.addMouseListener(formListener);
        colores.add(b_color3);

        b_color4.setBackground(new java.awt.Color(0, 153, 0));
        b_color4.addMouseListener(formListener);
        colores.add(b_color4);

        b_color5.setBackground(new java.awt.Color(102, 102, 102));
        b_color5.addMouseListener(formListener);
        colores.add(b_color5);

        b_color6.setBackground(new java.awt.Color(0, 255, 255));
        b_color6.addMouseListener(formListener);
        colores.add(b_color6);

        b_color7.setBackground(new java.awt.Color(255, 0, 204));
        b_color7.addMouseListener(formListener);
        colores.add(b_color7);

        b_color8.setBackground(new java.awt.Color(255, 102, 0));
        b_color8.addMouseListener(formListener);
        colores.add(b_color8);

        b_color9.setBackground(new java.awt.Color(0, 255, 0));
        b_color9.addMouseListener(formListener);
        colores.add(b_color9);

        b_color10.setBackground(new java.awt.Color(255, 255, 255));
        b_color10.addMouseListener(formListener);
        colores.add(b_color10);

        b_color11.setBackground(new java.awt.Color(153, 102, 255));
        b_color11.addMouseListener(formListener);
        colores.add(b_color11);

        b_color12.setBackground(new java.awt.Color(255, 0, 0));
        b_color12.addMouseListener(formListener);
        colores.add(b_color12);

        b_color13.setBackground(new java.awt.Color(255, 255, 0));
        b_color13.addMouseListener(formListener);
        colores.add(b_color13);

        b_selectorColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/paleta.png"))); // NOI18N
        b_selectorColor.addMouseListener(formListener);
        colores.add(b_selectorColor);

        degradado.setText("Degradado");
        degradado.addActionListener(formListener);

        javax.swing.GroupLayout vistaPreviaLayout = new javax.swing.GroupLayout(vistaPrevia);
        vistaPrevia.setLayout(vistaPreviaLayout);
        vistaPreviaLayout.setHorizontalGroup(
            vistaPreviaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );
        vistaPreviaLayout.setVerticalGroup(
            vistaPreviaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 93, Short.MAX_VALUE)
        );

        spinner_grosor.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));
        spinner_grosor.addChangeListener(formListener);

        l_grosor.setText("Grosor");

        rellenar.setText("Relleno");
        rellenar.setEnabled(false);
        rellenar.addActionListener(formListener);

        p_degradados.setLayout(new java.awt.GridLayout(1, 0));

        degradados.add(deg_horizontal);
        deg_horizontal.addActionListener(formListener);
        p_degradados.add(deg_horizontal);

        degradados.add(deg_diagonal1);
        deg_diagonal1.addActionListener(formListener);
        p_degradados.add(deg_diagonal1);

        degradados.add(deg_diagonal2);
        deg_diagonal2.addActionListener(formListener);
        p_degradados.add(deg_diagonal2);

        degradados.add(deg_vertical);
        deg_vertical.addActionListener(formListener);
        p_degradados.add(deg_vertical);

        l_transparencia.setText("Transparencia");

        sl_transparencia.setValue(100);
        sl_transparencia.addMouseMotionListener(formListener);

        check_puntear.setText("Punteada");
        check_puntear.addActionListener(formListener);

        fuentes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        fuentes.addActionListener(formListener);

        l_transparencia1.setText("Fuente");

        spinner_size.setModel(new javax.swing.SpinnerNumberModel(1, 1, 72, 1));
        spinner_size.setValue(14);
        spinner_size.addChangeListener(formListener);

        b_bold.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bold.png"))); // NOI18N
        b_bold.addActionListener(formListener);

        b_italic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/italic.png"))); // NOI18N
        b_italic.addActionListener(formListener);

        javax.swing.GroupLayout v_atributosLayout = new javax.swing.GroupLayout(v_atributos.getContentPane());
        v_atributos.getContentPane().setLayout(v_atributosLayout);
        v_atributosLayout.setHorizontalGroup(
            v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v_atributosLayout.createSequentialGroup()
                .addGroup(v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(v_atributosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(l_transparencia))
                    .addGroup(v_atributosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(colores, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(v_atributosLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(p_degradados, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(v_atributosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(l_transparencia1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(v_atributosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fuentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(v_atributosLayout.createSequentialGroup()
                                .addGroup(v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, v_atributosLayout.createSequentialGroup()
                                        .addComponent(spinner_size, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b_bold, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(rellenar, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(degradado, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_italic, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(v_atributosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sl_transparencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(v_atributosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(l_grosor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinner_grosor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_puntear)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        v_atributosLayout.setVerticalGroup(
            v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v_atributosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(vistaPrevia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colores, javax.swing.GroupLayout.PREFERRED_SIZE, 93, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_grosor)
                    .addComponent(spinner_grosor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(check_puntear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_transparencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sl_transparencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(rellenar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(p_degradados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(degradado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_transparencia1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fuentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(v_atributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_bold, javax.swing.GroupLayout.PREFERRED_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(b_italic, 0, 0, Short.MAX_VALUE)
                    .addComponent(spinner_size, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        v_atributos.setBounds(10, 90, 250, 360);
        escritorio.add(v_atributos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        v_herramientas.setVisible(true);
        v_herramientas.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        b_deshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/deshacer.png"))); // NOI18N
        b_deshacer.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_deshacer);

        formas.add(b_lapiz);
        b_lapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ico_lapiz.png"))); // NOI18N
        b_lapiz.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_lapiz);

        formas.add(b_recta);
        b_recta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/im_raya.png"))); // NOI18N
        b_recta.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_recta);

        formas.add(b_rectangulo);
        b_rectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rect.png"))); // NOI18N
        b_rectangulo.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_rectangulo);

        formas.add(b_round_rect);
        b_round_rect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/round_rect.png"))); // NOI18N
        b_round_rect.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_round_rect);

        formas.add(b_elipse);
        b_elipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ellipse.png"))); // NOI18N
        b_elipse.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_elipse);

        formas.add(b_curva1);
        b_curva1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/curva.png"))); // NOI18N
        b_curva1.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_curva1);

        formas.add(b_curva2);
        b_curva2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/curva2.png"))); // NOI18N
        b_curva2.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_curva2);

        formas.add(b_texto);
        b_texto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/texto.png"))); // NOI18N
        b_texto.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_texto);

        formas.add(b_actualizar);
        b_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/actualizar.png"))); // NOI18N
        b_actualizar.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_actualizar);

        b_rehacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ReDo.png"))); // NOI18N
        b_rehacer.addActionListener(formListener);
        v_herramientas.getContentPane().add(b_rehacer);

        v_herramientas.setBounds(10, 10, 430, 70);
        escritorio.add(v_herramientas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        v_confirmacion.setVisible(true);
        v_confirmacion.getContentPane().setLayout(new java.awt.FlowLayout());

        msg_warning.setFont(new java.awt.Font("Tahoma", 0, 18));
        msg_warning.setForeground(new java.awt.Color(255, 0, 0));
        msg_warning.setText("¿Desea aplicar la operación?");
        v_confirmacion.getContentPane().add(msg_warning);

        aplicar_op.setText("Aplicar");
        aplicar_op.addActionListener(formListener);
        v_confirmacion.getContentPane().add(aplicar_op);

        deshacer_op.setText("Deshacer");
        deshacer_op.addActionListener(formListener);
        v_confirmacion.getContentPane().add(deshacer_op);

        v_confirmacion.setBounds(690, 10, 260, 100);
        escritorio.add(v_confirmacion, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);
        Manejador_Escritorio manejador = new Manejador_Escritorio();
        escritorio.setDesktopManager(manejador);

        b_archivo.setText("Archivo");

        b_nuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        b_nuevo.setText("Nuevo");
        b_nuevo.addActionListener(formListener);
        b_archivo.add(b_nuevo);

        b_abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        b_abrir.setText("Abrir");
        b_abrir.addActionListener(formListener);
        b_archivo.add(b_abrir);

        b_guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        b_guardar.setText("Guardar");
        b_guardar.addActionListener(formListener);
        b_archivo.add(b_guardar);

        b_salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        b_salir.setText("Salir");
        b_salir.addActionListener(formListener);
        b_archivo.add(b_salir);

        barra_menu.add(b_archivo);

        b_editar.setText("Editar");

        m_deshacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        m_deshacer.setText("Deshacer");
        m_deshacer.addActionListener(formListener);
        b_editar.add(m_deshacer);

        m_rehacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        m_rehacer.setText("Rehacer");
        m_rehacer.addActionListener(formListener);
        b_editar.add(m_rehacer);

        m_actualizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, java.awt.event.InputEvent.CTRL_MASK));
        m_actualizar.setText("Actualizar");
        m_actualizar.addActionListener(formListener);
        b_editar.add(m_actualizar);

        barra_menu.add(b_editar);

        b_formas.setText("Formas");

        m_lapiz.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, java.awt.event.InputEvent.CTRL_MASK));
        m_lapiz.setText("Trazo Libre");
        m_lapiz.addActionListener(formListener);
        b_formas.add(m_lapiz);

        m_linea.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        m_linea.setText("Linea");
        m_linea.addActionListener(formListener);
        b_formas.add(m_linea);

        m_rect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        m_rect.setText("Rectangulo");
        m_rect.addActionListener(formListener);
        b_formas.add(m_rect);

        m_rect_round.setText("Rectangulo Redondeado");
        m_rect_round.addActionListener(formListener);
        b_formas.add(m_rect_round);

        m_elipse.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        m_elipse.setText("Elipse");
        m_elipse.addActionListener(formListener);
        b_formas.add(m_elipse);

        m_curva1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        m_curva1.setText("Curva con 1 punto de control");
        m_curva1.addActionListener(formListener);
        b_formas.add(m_curva1);

        m_curva2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        m_curva2.setText("Curva con 2 puntos de control");
        m_curva2.addActionListener(formListener);
        b_formas.add(m_curva2);

        m_texto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        m_texto.setText("Texto");
        m_texto.addActionListener(formListener);
        b_formas.add(m_texto);

        barra_menu.add(b_formas);

        b_atributos.setText("Atributos");

        m_color.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_MASK));
        m_color.setText("Color primario");
        m_color.addActionListener(formListener);
        b_atributos.add(m_color);

        m_color2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.CTRL_MASK));
        m_color2.setText("Color secundario");
        m_color2.addActionListener(formListener);
        b_atributos.add(m_color2);

        m_grosor.setText("Grosor");

        mas_grosor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PLUS, java.awt.event.InputEvent.CTRL_MASK));
        mas_grosor.setText("Aumentar Grosor");
        mas_grosor.addActionListener(formListener);
        m_grosor.add(mas_grosor);

        menos_grosor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, java.awt.event.InputEvent.CTRL_MASK));
        menos_grosor.setText("Disminuir Grosor");
        menos_grosor.addActionListener(formListener);
        m_grosor.add(menos_grosor);

        b_atributos.add(m_grosor);

        m_punteo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        m_punteo.setSelected(false);
        m_punteo.setText("Punteada");
        m_punteo.addActionListener(formListener);
        b_atributos.add(m_punteo);

        m_transparencia.setText("Grosor");

        mas_transparencia.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_UP, java.awt.event.InputEvent.CTRL_MASK));
        mas_transparencia.setText("Aumentar Transparencia");
        mas_transparencia.addActionListener(formListener);
        m_transparencia.add(mas_transparencia);

        menos_transparencia.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DOWN, java.awt.event.InputEvent.CTRL_MASK));
        menos_transparencia.setText("Disminuir Transparencia");
        menos_transparencia.addActionListener(formListener);
        m_transparencia.add(menos_transparencia);

        b_atributos.add(m_transparencia);

        m_relleno.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        m_relleno.setSelected(false);
        m_relleno.setText("Relleno");
        m_relleno.setEnabled(false);
        m_relleno.addActionListener(formListener);
        b_atributos.add(m_relleno);

        m_degradados.setText("Degradados");

        m_deghoz.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        menu_degradados.add(m_deghoz);
        m_deghoz.setText("Horizontal");
        m_deghoz.addActionListener(formListener);
        m_degradados.add(m_deghoz);

        m_degver.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        menu_degradados.add(m_degver);
        m_degver.setText("Vertical");
        m_degver.addActionListener(formListener);
        m_degradados.add(m_degver);

        m_degd1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_RIGHT, java.awt.event.InputEvent.CTRL_MASK));
        menu_degradados.add(m_degd1);
        m_degd1.setText("Diagonal 1");
        m_degd1.addActionListener(formListener);
        m_degradados.add(m_degd1);

        m_degd2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT, java.awt.event.InputEvent.CTRL_MASK));
        menu_degradados.add(m_degd2);
        m_degd2.setText("Diagonal 2");
        m_degd2.addActionListener(formListener);
        m_degradados.add(m_degd2);

        b_atributos.add(m_degradados);

        barra_menu.add(b_atributos);

        m_formato.setText("Formato");

        m_negrita.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        m_negrita.setText("Negrita");
        m_negrita.addActionListener(formListener);
        m_formato.add(m_negrita);

        m_cursiva.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        m_cursiva.setText("Cursiva");
        m_cursiva.addActionListener(formListener);
        m_formato.add(m_cursiva);

        m_tamanio.setText("Tamaño");

        mas_tamanio.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PAGE_UP, java.awt.event.InputEvent.CTRL_MASK));
        mas_tamanio.setText("Aumentar Tamaño");
        mas_tamanio.addActionListener(formListener);
        m_tamanio.add(mas_tamanio);

        menos_tamanio.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PAGE_DOWN, java.awt.event.InputEvent.CTRL_MASK));
        menos_tamanio.setText("Disminuir Tamaño");
        menos_tamanio.addActionListener(formListener);
        m_tamanio.add(menos_tamanio);

        m_formato.add(m_tamanio);

        barra_menu.add(m_formato);

        b_ayuda.setText("Ayuda");

        about.setText("Acerca de");
        about.addActionListener(formListener);
        b_ayuda.add(about);

        barra_menu.add(b_ayuda);

        setJMenuBar(barra_menu);

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseListener, java.awt.event.MouseMotionListener, javax.swing.event.ChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == logaritmo) {
                Ventana_Principal.this.logaritmoActionPerformed(evt);
            }
            else if (evt.getSource() == negativo) {
                Ventana_Principal.this.negativoActionPerformed(evt);
            }
            else if (evt.getSource() == contraste) {
                Ventana_Principal.this.contrasteActionPerformed(evt);
            }
            else if (evt.getSource() == byn) {
                Ventana_Principal.this.bynActionPerformed(evt);
            }
            else if (evt.getSource() == gamma) {
                Ventana_Principal.this.gammaActionPerformed(evt);
            }
            else if (evt.getSource() == dibujo) {
                Ventana_Principal.this.dibujoActionPerformed(evt);
            }
            else if (evt.getSource() == repujar) {
                Ventana_Principal.this.repujarActionPerformed(evt);
            }
            else if (evt.getSource() == detect_fr) {
                Ventana_Principal.this.detect_frActionPerformed(evt);
            }
            else if (evt.getSource() == realce) {
                Ventana_Principal.this.realceActionPerformed(evt);
            }
            else if (evt.getSource() == sua_avanzado) {
                Ventana_Principal.this.sua_avanzadoActionPerformed(evt);
            }
            else if (evt.getSource() == sua_simple) {
                Ventana_Principal.this.sua_simpleActionPerformed(evt);
            }
            else if (evt.getSource() == l_estirar) {
                Ventana_Principal.this.l_estirarActionPerformed(evt);
            }
            else if (evt.getSource() == l_trasladar) {
                Ventana_Principal.this.l_trasladarActionPerformed(evt);
            }
            else if (evt.getSource() == l_redimensionar) {
                Ventana_Principal.this.l_redimensionarActionPerformed(evt);
            }
            else if (evt.getSource() == b_ok_trasladar) {
                Ventana_Principal.this.b_ok_trasladarActionPerformed(evt);
            }
            else if (evt.getSource() == b_ok_estirar) {
                Ventana_Principal.this.b_ok_estirarActionPerformed(evt);
            }
            else if (evt.getSource() == b_ok_redimen) {
                Ventana_Principal.this.b_ok_redimenActionPerformed(evt);
            }
            else if (evt.getSource() == degradado) {
                Ventana_Principal.this.degradadoActionPerformed(evt);
            }
            else if (evt.getSource() == rellenar) {
                Ventana_Principal.this.rellenarActionPerformed(evt);
            }
            else if (evt.getSource() == deg_horizontal) {
                Ventana_Principal.this.deg_horizontalActionPerformed(evt);
            }
            else if (evt.getSource() == deg_diagonal1) {
                Ventana_Principal.this.deg_diagonal1ActionPerformed(evt);
            }
            else if (evt.getSource() == deg_diagonal2) {
                Ventana_Principal.this.deg_diagonal2ActionPerformed(evt);
            }
            else if (evt.getSource() == deg_vertical) {
                Ventana_Principal.this.deg_verticalActionPerformed(evt);
            }
            else if (evt.getSource() == check_puntear) {
                Ventana_Principal.this.check_puntearActionPerformed(evt);
            }
            else if (evt.getSource() == fuentes) {
                Ventana_Principal.this.fuentesActionPerformed(evt);
            }
            else if (evt.getSource() == b_bold) {
                Ventana_Principal.this.b_boldActionPerformed(evt);
            }
            else if (evt.getSource() == b_italic) {
                Ventana_Principal.this.b_italicActionPerformed(evt);
            }
            else if (evt.getSource() == b_deshacer) {
                Ventana_Principal.this.b_deshacerActionPerformed(evt);
            }
            else if (evt.getSource() == b_lapiz) {
                Ventana_Principal.this.b_lapizActionPerformed(evt);
            }
            else if (evt.getSource() == b_recta) {
                Ventana_Principal.this.b_rectaActionPerformed(evt);
            }
            else if (evt.getSource() == b_rectangulo) {
                Ventana_Principal.this.b_rectanguloActionPerformed(evt);
            }
            else if (evt.getSource() == b_round_rect) {
                Ventana_Principal.this.b_round_rectActionPerformed(evt);
            }
            else if (evt.getSource() == b_elipse) {
                Ventana_Principal.this.b_elipseActionPerformed(evt);
            }
            else if (evt.getSource() == b_curva1) {
                Ventana_Principal.this.b_curva1ActionPerformed(evt);
            }
            else if (evt.getSource() == b_curva2) {
                Ventana_Principal.this.b_curva2ActionPerformed(evt);
            }
            else if (evt.getSource() == b_texto) {
                Ventana_Principal.this.b_textoActionPerformed(evt);
            }
            else if (evt.getSource() == b_actualizar) {
                Ventana_Principal.this.b_actualizarActionPerformed(evt);
            }
            else if (evt.getSource() == b_rehacer) {
                Ventana_Principal.this.b_rehacerActionPerformed(evt);
            }
            else if (evt.getSource() == aplicar_op) {
                Ventana_Principal.this.aplicar_opActionPerformed(evt);
            }
            else if (evt.getSource() == deshacer_op) {
                Ventana_Principal.this.deshacer_opActionPerformed(evt);
            }
            else if (evt.getSource() == b_nuevo) {
                Ventana_Principal.this.b_nuevoActionPerformed(evt);
            }
            else if (evt.getSource() == b_abrir) {
                Ventana_Principal.this.b_abrirActionPerformed(evt);
            }
            else if (evt.getSource() == b_guardar) {
                Ventana_Principal.this.b_guardarActionPerformed(evt);
            }
            else if (evt.getSource() == b_salir) {
                Ventana_Principal.this.b_salirActionPerformed(evt);
            }
            else if (evt.getSource() == m_deshacer) {
                Ventana_Principal.this.m_deshacerActionPerformed(evt);
            }
            else if (evt.getSource() == m_rehacer) {
                Ventana_Principal.this.m_rehacerActionPerformed(evt);
            }
            else if (evt.getSource() == m_actualizar) {
                Ventana_Principal.this.m_actualizarActionPerformed(evt);
            }
            else if (evt.getSource() == m_lapiz) {
                Ventana_Principal.this.m_lapizActionPerformed(evt);
            }
            else if (evt.getSource() == m_linea) {
                Ventana_Principal.this.m_lineaActionPerformed(evt);
            }
            else if (evt.getSource() == m_rect) {
                Ventana_Principal.this.m_rectActionPerformed(evt);
            }
            else if (evt.getSource() == m_rect_round) {
                Ventana_Principal.this.m_rect_roundActionPerformed(evt);
            }
            else if (evt.getSource() == m_elipse) {
                Ventana_Principal.this.m_elipseActionPerformed(evt);
            }
            else if (evt.getSource() == m_curva1) {
                Ventana_Principal.this.m_curva1ActionPerformed(evt);
            }
            else if (evt.getSource() == m_curva2) {
                Ventana_Principal.this.m_curva2ActionPerformed(evt);
            }
            else if (evt.getSource() == m_texto) {
                Ventana_Principal.this.m_textoActionPerformed(evt);
            }
            else if (evt.getSource() == m_color) {
                Ventana_Principal.this.m_colorActionPerformed(evt);
            }
            else if (evt.getSource() == m_color2) {
                Ventana_Principal.this.m_color2ActionPerformed(evt);
            }
            else if (evt.getSource() == mas_grosor) {
                Ventana_Principal.this.mas_grosorActionPerformed(evt);
            }
            else if (evt.getSource() == menos_grosor) {
                Ventana_Principal.this.menos_grosorActionPerformed(evt);
            }
            else if (evt.getSource() == m_punteo) {
                Ventana_Principal.this.m_punteoActionPerformed(evt);
            }
            else if (evt.getSource() == mas_transparencia) {
                Ventana_Principal.this.mas_transparenciaActionPerformed(evt);
            }
            else if (evt.getSource() == menos_transparencia) {
                Ventana_Principal.this.menos_transparenciaActionPerformed(evt);
            }
            else if (evt.getSource() == m_relleno) {
                Ventana_Principal.this.m_rellenoActionPerformed(evt);
            }
            else if (evt.getSource() == m_deghoz) {
                Ventana_Principal.this.m_deghozActionPerformed(evt);
            }
            else if (evt.getSource() == m_degver) {
                Ventana_Principal.this.m_degverActionPerformed(evt);
            }
            else if (evt.getSource() == m_degd1) {
                Ventana_Principal.this.m_degd1ActionPerformed(evt);
            }
            else if (evt.getSource() == m_degd2) {
                Ventana_Principal.this.m_degd2ActionPerformed(evt);
            }
            else if (evt.getSource() == mas_tamanio) {
                Ventana_Principal.this.mas_tamanioActionPerformed(evt);
            }
            else if (evt.getSource() == menos_tamanio) {
                Ventana_Principal.this.menos_tamanioActionPerformed(evt);
            }
            else if (evt.getSource() == about) {
                Ventana_Principal.this.aboutActionPerformed(evt);
            }
            else if (evt.getSource() == m_negrita) {
                Ventana_Principal.this.m_negritaActionPerformed(evt);
            }
            else if (evt.getSource() == m_cursiva) {
                Ventana_Principal.this.m_cursivaActionPerformed(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == b_color) {
                Ventana_Principal.this.b_colorMouseClicked(evt);
            }
            else if (evt.getSource() == b_color1) {
                Ventana_Principal.this.b_color1MouseClicked(evt);
            }
            else if (evt.getSource() == b_color2) {
                Ventana_Principal.this.b_color2MouseClicked(evt);
            }
            else if (evt.getSource() == b_color3) {
                Ventana_Principal.this.b_color3MouseClicked(evt);
            }
            else if (evt.getSource() == b_color4) {
                Ventana_Principal.this.b_color4MouseClicked(evt);
            }
            else if (evt.getSource() == b_color5) {
                Ventana_Principal.this.b_color5MouseClicked(evt);
            }
            else if (evt.getSource() == b_color6) {
                Ventana_Principal.this.b_color6MouseClicked(evt);
            }
            else if (evt.getSource() == b_color7) {
                Ventana_Principal.this.b_color7MouseClicked(evt);
            }
            else if (evt.getSource() == b_color8) {
                Ventana_Principal.this.b_color8MouseClicked(evt);
            }
            else if (evt.getSource() == b_color9) {
                Ventana_Principal.this.b_color9MouseClicked(evt);
            }
            else if (evt.getSource() == b_color10) {
                Ventana_Principal.this.b_color10MouseClicked(evt);
            }
            else if (evt.getSource() == b_color11) {
                Ventana_Principal.this.b_color11MouseClicked(evt);
            }
            else if (evt.getSource() == b_color12) {
                Ventana_Principal.this.b_color12MouseClicked(evt);
            }
            else if (evt.getSource() == b_color13) {
                Ventana_Principal.this.b_color13MouseClicked(evt);
            }
            else if (evt.getSource() == b_selectorColor) {
                Ventana_Principal.this.b_selectorColorMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == slider_rotar) {
                Ventana_Principal.this.slider_rotarMousePressed(evt);
            }
            else if (evt.getSource() == slider_zoom) {
                Ventana_Principal.this.slider_zoomMousePressed(evt);
            }
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == slider_brillo) {
                Ventana_Principal.this.slider_brilloMouseReleased(evt);
            }
            else if (evt.getSource() == slider_rotar) {
                Ventana_Principal.this.slider_rotarMouseReleased(evt);
            }
            else if (evt.getSource() == slider_zoom) {
                Ventana_Principal.this.slider_zoomMouseReleased(evt);
            }
        }

        public void mouseDragged(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == slider_brillo) {
                Ventana_Principal.this.slider_brilloMouseDragged(evt);
            }
            else if (evt.getSource() == slider_rotar) {
                Ventana_Principal.this.slider_rotarMouseDragged(evt);
            }
            else if (evt.getSource() == slider_zoom) {
                Ventana_Principal.this.slider_zoomMouseDragged(evt);
            }
            else if (evt.getSource() == sli_trasladar_ancho) {
                Ventana_Principal.this.sli_trasladar_anchoMouseDragged(evt);
            }
            else if (evt.getSource() == sli_trasladar_alto) {
                Ventana_Principal.this.sli_trasladar_altoMouseDragged(evt);
            }
            else if (evt.getSource() == sli_estirar_ancho) {
                Ventana_Principal.this.sli_estirar_anchoMouseDragged(evt);
            }
            else if (evt.getSource() == sli_estirar_alto) {
                Ventana_Principal.this.sli_estirar_altoMouseDragged(evt);
            }
            else if (evt.getSource() == sl_transparencia) {
                Ventana_Principal.this.sl_transparenciaMouseDragged(evt);
            }
        }

        public void mouseMoved(java.awt.event.MouseEvent evt) {
        }

        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            if (evt.getSource() == spinner_ancho) {
                Ventana_Principal.this.spinner_anchoStateChanged(evt);
            }
            else if (evt.getSource() == spinner_alto) {
                Ventana_Principal.this.spinner_altoStateChanged(evt);
            }
            else if (evt.getSource() == spinner_grosor) {
                Ventana_Principal.this.spinner_grosorStateChanged(evt);
            }
            else if (evt.getSource() == spinner_size) {
                Ventana_Principal.this.spinner_sizeStateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void selectForma(){
        if(b_lapiz.isSelected() || b_recta.isSelected() || b_curva1.isSelected() || b_curva2.isSelected()
               || b_texto.isSelected()){
            rellenar.setEnabled(false);
            rellenar.setSelected(false);
        }
        else rellenar.setEnabled(true);
        m_relleno.setEnabled(rellenar.isEnabled());
        m_relleno.setSelected(rellenar.isSelected());
        if(vlienzo==null)
            return;
        vlienzo.getLienzo().setEditar(false);
        if(b_lapiz.isSelected()) vlienzo.getLienzo().setForma(tipoForma.trazo_libre);
        else if(b_recta.isSelected()) vlienzo.getLienzo().setForma(tipoForma.linea);
        else if(b_curva1.isSelected()) vlienzo.getLienzo().setForma(tipoForma.curva1);
        else if(b_rectangulo.isSelected()) vlienzo.getLienzo().setForma(tipoForma.rectangulo);
        else if(b_elipse.isSelected()) vlienzo.getLienzo().setForma(tipoForma.elipse);
        else if(b_round_rect.isSelected()) vlienzo.getLienzo().setForma(tipoForma.round_rect);
        else if(b_curva2.isSelected()) vlienzo.getLienzo().setForma(tipoForma.curva2);
        else if(b_texto.isSelected()) vlienzo.getLienzo().setForma(tipoForma.texto);
        else vlienzo.getLienzo().setEditar(true);
    }

    private void rellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rellenarActionPerformed
        m_relleno.setSelected(rellenar.isSelected());
        if(vlienzo==null) return;
        vlienzo.getLienzo().setRellenar(rellenar.isSelected());
}//GEN-LAST:event_rellenarActionPerformed

    private void spinner_grosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner_grosorStateChanged
       float f = Float.valueOf(spinner_grosor.getValue().toString()).floatValue();
        if(vlienzo!=null)
           vlienzo.getLienzo().setGrosor(f);
       vistaPrevia.set(f);
    }//GEN-LAST:event_spinner_grosorStateChanged

    private void b_rehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_rehacerActionPerformed
        if(vlienzo!=null)   vlienzo.getLienzo().rehacer();
}//GEN-LAST:event_b_rehacerActionPerformed

    private void b_deshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_deshacerActionPerformed
        if(vlienzo!=null)   vlienzo.getLienzo().deshacer();
}//GEN-LAST:event_b_deshacerActionPerformed

    private void aniadeVLienzo(Ventana_Lienzo vlienzo){
        this.escritorio.add(vlienzo);
        vlienzo.setLocation(270,90+num*30);
        ++num;
        vlienzo.setVisible(true);
    }

    private int showDialogoSelectorArchivo(JFileChooser dlg){
        FileNameExtensionFilter imagenes = new FileNameExtensionFilter("Imágenes",
                                            "jpg","jpeg","bmp","gif","png");
        FileNameExtensionFilter jpg = new FileNameExtensionFilter("JPG","jpg");
        FileNameExtensionFilter jpeg = new FileNameExtensionFilter("JPEG","jpeg");
        FileNameExtensionFilter gif = new FileNameExtensionFilter("GIF","gif");
        FileNameExtensionFilter png = new FileNameExtensionFilter("PNG","png");
        FileNameExtensionFilter bmp = new FileNameExtensionFilter("BMP","bmp");
        dlg.setFileFilter(jpg);
        dlg.setFileFilter(jpeg);
        dlg.setFileFilter(gif);
        dlg.setFileFilter(png);
        dlg.setFileFilter(bmp);
        dlg.setFileFilter(imagenes);
        return dlg.showOpenDialog(escritorio);
    }

    private void b_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_abrirActionPerformed
        if(vlienzo!=null) manejador.activateFrame(vlienzo);
        BufferedImage img = null;
        JFileChooser dlg = new JFileChooser();
        if( showDialogoSelectorArchivo(dlg) == JFileChooser.APPROVE_OPTION) {
            try{
                img = ImageIO.read(dlg.getSelectedFile());
                vlienzo = new Ventana_Lienzo(img,dlg.getSelectedFile().getName());
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
                return;
            }
            aniadeVLienzo(vlienzo);
        }
}//GEN-LAST:event_b_abrirActionPerformed

    private void b_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nuevoActionPerformed
        if(vlienzo!=null) manejador.activateFrame(vlienzo);
        vlienzo = new Ventana_Lienzo();
        JOptionPane jop = new JOptionPane("Introduzca ancho y alto:");
        jop.add(p_spinners_redim,1);
        JDialog dlg = jop.createDialog(escritorio,"Dimensiones del Lienzo");
        dlg.setVisible(true);
        p_redimension.add(p_spinners_redim);
        p_redimension.add(p_ok);
        redimensionar();
        vlienzo.getLienzo().aplicar_operacion();
        aniadeVLienzo(vlienzo);
}//GEN-LAST:event_b_nuevoActionPerformed

    private void redimensionar(){
        if(no_redimensiones) return;
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            int ancho = (int)Float.valueOf(spinner_ancho.getValue().toString()).floatValue();
            int alto = (int)Float.valueOf(spinner_alto.getValue().toString()).floatValue();
            if(ancho!=0 && alto!=0 && (ancho!=vlienzo.getLienzo().getImagen().getWidth()
                    || alto!=vlienzo.getLienzo().getImagen().getHeight()))
                vlienzo.getLienzo().redimensionar(ancho,alto);
        }
        this.setCursor(null);
    }

    private void estirar(){
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        float a = sli_estirar_ancho.getValue()/100.0f;
        float b = sli_estirar_alto.getValue()/100.0f;
        if(vlienzo!=null)
            vlienzo.getLienzo().setAffineTransform(Transformacion.estirar,a,b);
        this.setCursor(null);
    }
    private void trasladar(){
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        float a = sli_trasladar_ancho.getValue();
        float b = sli_trasladar_alto.getValue();
        if(vlienzo!=null)
            vlienzo.getLienzo().setAffineTransform(Transformacion.trasladar,a,b);
        this.setCursor(null);
    }

    private void sua_simpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sua_simpleActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setConvolucion(Convolucion.tmedia);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
}//GEN-LAST:event_sua_simpleActionPerformed

    private void sua_avanzadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sua_avanzadoActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setConvolucion(Convolucion.tbinomial);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
}//GEN-LAST:event_sua_avanzadoActionPerformed

    private void realceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realceActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setConvolucion(Convolucion.trealce);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
}//GEN-LAST:event_realceActionPerformed

    private void detect_frActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detect_frActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setConvolucion(Convolucion.tlaplaciano);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
}//GEN-LAST:event_detect_frActionPerformed

    private void repujarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repujarActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setConvolucion(Convolucion.trepujar);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
}//GEN-LAST:event_repujarActionPerformed

    private void dibujoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dibujoActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setConvolucion(Convolucion.tdibujo);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
}//GEN-LAST:event_dibujoActionPerformed

    private void pulsaOk(){
        if(vlienzo!=null)
            vlienzo.getLienzo().aplicar_operacion();
       esperarConfirmacion(vlienzo.getLienzo().esperaConfirmacionOp());
    }

    private void b_ok_trasladarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ok_trasladarActionPerformed
        pulsaOk();
}//GEN-LAST:event_b_ok_trasladarActionPerformed

    private void sli_trasladar_altoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sli_trasladar_altoMouseDragged
        trasladar();
}//GEN-LAST:event_sli_trasladar_altoMouseDragged

    private void sli_trasladar_anchoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sli_trasladar_anchoMouseDragged
        trasladar();
}//GEN-LAST:event_sli_trasladar_anchoMouseDragged

    private void l_trasladarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l_trasladarActionPerformed
        if(vlienzo!=null){
            if(vlienzo.getLienzo().esperaConfirmacionOp())
               vlienzo.getLienzo().deshacer_operacion();
            esperarConfirmacion(false);
            l_trasladar.setSelected(true);
            trasladadores.setVisible(true);
        } else operaciones.clearSelection();
}//GEN-LAST:event_l_trasladarActionPerformed

    private void b_ok_redimenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ok_redimenActionPerformed
        pulsaOk();
}//GEN-LAST:event_b_ok_redimenActionPerformed

    private void spinner_altoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner_altoStateChanged
        //if(vlienzo==null) spinner_ancho.setValue(0);
        //else
            redimensionar();
}//GEN-LAST:event_spinner_altoStateChanged

    private void spinner_anchoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner_anchoStateChanged
        //if(vlienzo==null) spinner_ancho.setValue(0);
        //else
            redimensionar();
}//GEN-LAST:event_spinner_anchoStateChanged

    private void l_redimensionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l_redimensionarActionPerformed
        if(vlienzo!=null){
            if(vlienzo.getLienzo().esperaConfirmacionOp())
                vlienzo.getLienzo().deshacer_operacion();
            esperarConfirmacion(false);
            l_redimensionar.setSelected(true);
            no_redimensiones = true;
            spinner_ancho.setValue(vlienzo.getLienzo().getImagen().getWidth());
            spinner_alto.setValue(vlienzo.getLienzo().getImagen().getHeight());
            no_redimensiones = false;
            p_redimension.setVisible(true);
        } else operaciones.clearSelection();
}//GEN-LAST:event_l_redimensionarActionPerformed

    private void b_ok_estirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ok_estirarActionPerformed
        pulsaOk();
}//GEN-LAST:event_b_ok_estirarActionPerformed

    private void sli_estirar_altoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sli_estirar_altoMouseDragged
        estirar();
}//GEN-LAST:event_sli_estirar_altoMouseDragged

    private void sli_estirar_anchoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sli_estirar_anchoMouseDragged
        estirar();
}//GEN-LAST:event_sli_estirar_anchoMouseDragged

    private void l_estirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l_estirarActionPerformed
        if(vlienzo!=null){
            if(vlienzo.getLienzo().esperaConfirmacionOp())
                vlienzo.getLienzo().deshacer_operacion();
            esperarConfirmacion(false);
            l_estirar.setSelected(true);
            estiradores.setVisible(true);
        } else operaciones.clearSelection();
}//GEN-LAST:event_l_estirarActionPerformed

    private void slider_rotarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_rotarMouseDragged
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            int v = (int)(slider_rotar.getValue())/45;
            vlienzo.getLienzo().setAffineTransform(Transformacion.rotar, 45.0f*v, 0.0f);
        }
        this.setCursor(null);
}//GEN-LAST:event_slider_rotarMouseDragged

    private void slider_rotarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_rotarMouseReleased
        if(vlienzo!=null)
            esperarConfirmacion(vlienzo.getLienzo().esperaConfirmacionOp());
        slider_rotar.setValue(0);
}//GEN-LAST:event_slider_rotarMouseReleased

    private void slider_zoomMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_zoomMouseDragged
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            float v = (float)(slider_zoom.getValue())/100.0f;
            vlienzo.getLienzo().setAffineTransform(Transformacion.zoom, v, v);
        }
        this.setCursor(null);
}//GEN-LAST:event_slider_zoomMouseDragged

    private void slider_zoomMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_zoomMouseReleased
        if(vlienzo!=null)
            esperarConfirmacion(true);
        slider_zoom.setValue(100);
}//GEN-LAST:event_slider_zoomMouseReleased

    private void slider_brilloMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_brilloMouseDragged
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null)
            vlienzo.getLienzo().setBrillo((float)(slider_brillo.getValue()));
        this.setCursor(null);
}//GEN-LAST:event_slider_brilloMouseDragged

    private void slider_brilloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_brilloMouseReleased
        if(vlienzo!=null)
            esperarConfirmacion(true);
        slider_brillo.setValue(0);
}//GEN-LAST:event_slider_brilloMouseReleased

    private void deshacer_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deshacer_opActionPerformed
        vlienzo.getLienzo().deshacer_operacion();
        esperarConfirmacion(false);
}//GEN-LAST:event_deshacer_opActionPerformed

    private void aplicar_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicar_opActionPerformed
        vlienzo.getLienzo().aplicar_operacion();
        esperarConfirmacion(false);
}//GEN-LAST:event_aplicar_opActionPerformed

    private void b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardarActionPerformed
        if(vlienzo==null)
            return;
        JFileChooser dlg = new JFileChooser();
        if( showDialogoSelectorArchivo(dlg) == JFileChooser.APPROVE_OPTION) {
            try{
                ImageIO.write(vlienzo.getLienzo().getImagen(),"jpg",dlg.getSelectedFile());
                vlienzo.setTitle(dlg.getSelectedFile().getName());
            }catch(Exception ex){
                System.err.println("Error al salvar la imagen");
                return;
            }
         }
    }//GEN-LAST:event_b_guardarActionPerformed

    private void degradadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degradadoActionPerformed
        if(vlienzo==null)
            return;
        p_degradados.setVisible(degradado.isSelected());
        if(!degradado.isSelected()){
            vlienzo.getLienzo().setDegradado(Degradado.none);
            degradados.clearSelection();
        }
}//GEN-LAST:event_degradadoActionPerformed

    private void deg_verticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deg_verticalActionPerformed
        m_degver.setSelected(deg_vertical.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.vertical);
    }//GEN-LAST:event_deg_verticalActionPerformed

    private void deg_horizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deg_horizontalActionPerformed
        m_deghoz.setSelected(deg_horizontal.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.horizontal);
    }//GEN-LAST:event_deg_horizontalActionPerformed

    private void deg_diagonal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deg_diagonal1ActionPerformed
        m_degd1.setSelected(deg_diagonal1.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.diagonal1);
    }//GEN-LAST:event_deg_diagonal1ActionPerformed

    private void deg_diagonal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deg_diagonal2ActionPerformed
        m_degd2.setSelected(deg_diagonal2.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.diagonal2);
    }//GEN-LAST:event_deg_diagonal2ActionPerformed

    private void b_lapizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_lapizActionPerformed
        selectForma();
    }//GEN-LAST:event_b_lapizActionPerformed

    private void b_rectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_rectaActionPerformed
        selectForma();
    }//GEN-LAST:event_b_rectaActionPerformed

    private void b_rectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_rectanguloActionPerformed
        selectForma();
    }//GEN-LAST:event_b_rectanguloActionPerformed

    private void b_elipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_elipseActionPerformed
        selectForma();
    }//GEN-LAST:event_b_elipseActionPerformed

    private void setAtributos(){
        if(vlienzo==null)
            return;
        vlienzo.getLienzo().setText(texto);
        vlienzo.getLienzo().set(this.getFont());
        sl_transparenciaMouseDragged(null);
        rellenarActionPerformed(null);
        spinner_grosorStateChanged(null);
        degradadoActionPerformed(null);
        check_puntearActionPerformed(null);
    }

    private void b_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_actualizarActionPerformed
        if(vlienzo!=null){
            vlienzo.getLienzo().setEditar(true);
            setAtributos();
        }
    }//GEN-LAST:event_b_actualizarActionPerformed

    private void b_round_rectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_round_rectActionPerformed
        selectForma();
    }//GEN-LAST:event_b_round_rectActionPerformed

    private Color applyAlpha(Color c){
        float a = ((float)sl_transparencia.getValue()/100.0f);
        Color b = new Color(c.getRed()/255f,c.getGreen()/255f,c.getBlue()/255f,a);
        return b;
    }

    private void sl_transparenciaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sl_transparenciaMouseDragged
        Color f = vistaPrevia.getForeground();
        Color b = vistaPrevia.getFondo();
        vistaPrevia.setForeground(applyAlpha(f));
        vistaPrevia.setFondo(applyAlpha(b));
        if(vlienzo==null) return;
        vlienzo.getLienzo().setColor1(vistaPrevia.getForeground());
        vlienzo.getLienzo().setColor2(vistaPrevia.getFondo());
    }//GEN-LAST:event_sl_transparenciaMouseDragged

    private void b_colorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_colorMouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_colorMouseClicked

    private void b_color1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color1MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color1MouseClicked

    private void b_color2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color2MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color2MouseClicked

    private void b_color3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color3MouseClicked
          selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color3MouseClicked

    private void b_color4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color4MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color4MouseClicked

    private void b_color5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color5MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color5MouseClicked

    private void b_color6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color6MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color6MouseClicked

    private void b_color7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color7MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color7MouseClicked

    private void b_color8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color8MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color8MouseClicked

    private void b_color9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color9MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color9MouseClicked

    private void b_color10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color10MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color10MouseClicked

    private void b_color11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color11MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color11MouseClicked

    private void b_color12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color12MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color12MouseClicked

    private void b_color13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_color13MouseClicked
        selectColor(evt.getComponent().getBackground(),evt.getButton());
    }//GEN-LAST:event_b_color13MouseClicked

    private void b_selectorColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_selectorColorMouseClicked
        Color a;
        if(evt.getButton()==MouseEvent.BUTTON1)
            a = vistaPrevia.getForeground();
        else if(evt.getButton()==MouseEvent.BUTTON3)
            a = vistaPrevia.getFondo();
        else return;
        JColorChooser selectorColor = new JColorChooser();
        Color c = selectorColor.showDialog(escritorio, "Paleta Avanzada", a);
        if(c!=null)
            selectColor(c,evt.getButton());
    }//GEN-LAST:event_b_selectorColorMouseClicked

    private void check_puntearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_puntearActionPerformed
        m_punteo.setSelected(check_puntear.isSelected());
        if(vlienzo!=null) vlienzo.getLienzo().setPunteo(check_puntear.isSelected());
        vistaPrevia.setPunteo(check_puntear.isSelected());
    }//GEN-LAST:event_check_puntearActionPerformed

    private void b_curva1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_curva1ActionPerformed
         selectForma();
    }//GEN-LAST:event_b_curva1ActionPerformed

    private void b_curva2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_curva2ActionPerformed
        selectForma();
    }//GEN-LAST:event_b_curva2ActionPerformed

    private void negativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negativoActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setLookUpOp(Funcion.negativo);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
    }//GEN-LAST:event_negativoActionPerformed

    private void logaritmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logaritmoActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setLookUpOp(Funcion.logaritmo);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
    }//GEN-LAST:event_logaritmoActionPerformed

    private void gammaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gammaActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setLookUpOp(Funcion.gamma);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
    }//GEN-LAST:event_gammaActionPerformed

    private void reestablece_p_dimensiones(){
        if(vlienzo!=null)
            vlienzo.getLienzo().deshacer_operacion();
        estiradores.setVisible(false);
        trasladadores.setVisible(false);
        p_redimension.setVisible(false);
    }

    private void slider_rotarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_rotarMousePressed
        reestablece_p_dimensiones();
    }//GEN-LAST:event_slider_rotarMousePressed

    private void slider_zoomMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_zoomMousePressed
        reestablece_p_dimensiones();
    }//GEN-LAST:event_slider_zoomMousePressed

    private void contrasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrasteActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().setLookUpOp(Funcion.contraste);
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
    }//GEN-LAST:event_contrasteActionPerformed

    private void bynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bynActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(vlienzo!=null){
            vlienzo.getLienzo().toBYN();
            esperarConfirmacion(true);
        }
        operaciones.clearSelection();
        this.setCursor(null);
    }//GEN-LAST:event_bynActionPerformed

    private void b_textoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_textoActionPerformed
        selectForma();
        JOptionPane jop = new JOptionPane("Texto a escribir:");
        JTextField campo = new JTextField(texto);
        jop.add(campo,1);
        JDialog dlg = jop.createDialog("Herramienta de escritura");
        dlg.setVisible(true);
        if(!campo.getText().equals(""))
            texto = campo.getText();
        if(vlienzo!=null) vlienzo.getLienzo().setText(texto);     
    }//GEN-LAST:event_b_textoActionPerformed

    private void fuentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuentesActionPerformed
        this.setFont(new Font(fuentes.getSelectedItem().toString(),
                this.getFont().getStyle(),
                this.getFont().getSize()));
        if(vlienzo!=null) vlienzo.getLienzo().set(this.getFont());
    }//GEN-LAST:event_fuentesActionPerformed

    private void spinner_sizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner_sizeStateChanged
       int i = (int) Float.valueOf(spinner_size.getValue().toString()).floatValue();
       this.setFont(new Font(this.getFont().getName(),
                            this.getFont().getStyle(),
                            i));
        if(vlienzo!=null) vlienzo.getLienzo().set(this.getFont());
    }//GEN-LAST:event_spinner_sizeStateChanged

    private void b_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_b_salirActionPerformed

    private void setFontStyle(){
        this.setFont(new Font(fuentes.getSelectedItem().toString(), Font.PLAIN,
                this.getFont().getSize()));
        if(b_bold.isSelected())
            this.setFont(new Font(fuentes.getSelectedItem().toString(), Font.BOLD,
                this.getFont().getSize()));
        if(b_italic.isSelected())
            this.setFont(new Font(fuentes.getSelectedItem().toString(), Font.ITALIC,
                this.getFont().getSize()));
        if(vlienzo!=null) vlienzo.getLienzo().set(this.getFont());
    }

    private void b_boldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_boldActionPerformed
        m_negrita.setSelected(b_bold.isSelected());
        setFontStyle();
    }//GEN-LAST:event_b_boldActionPerformed

    private void b_italicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_italicActionPerformed
        m_cursiva.setSelected(b_italic.isSelected());
        setFontStyle();
    }//GEN-LAST:event_b_italicActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        JOptionPane jop = new JOptionPane();
        JPanel panel = new JPanel();
        JPanel panel2 = new JPanel();
        JPanel panel3 = new JPanel();
        panel.setLayout(new java.awt.FlowLayout());
        panel2.setLayout(new java.awt.FlowLayout());
        panel3.setLayout(new java.awt.GridLayout(2,0));
        panel.add(new JLabel("Spaint - Draw it"));
        panel2.add(new JLabel("v1.0 - Aarón Rosas"));
        panel3.add(panel); panel3.add(panel2);
        jop.showMessageDialog(escritorio,panel3,"Acerca de Spaint",JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_aboutActionPerformed

    private void m_deshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_deshacerActionPerformed
        b_deshacerActionPerformed(null);
    }//GEN-LAST:event_m_deshacerActionPerformed

    private void m_rehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_rehacerActionPerformed
        b_rehacerActionPerformed(null);
    }//GEN-LAST:event_m_rehacerActionPerformed

    private void m_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_actualizarActionPerformed
        b_actualizarActionPerformed(null);
        b_actualizar.setSelected(true);
    }//GEN-LAST:event_m_actualizarActionPerformed

    private void m_lapizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_lapizActionPerformed
        b_lapiz.setSelected(true);
        selectForma();
    }//GEN-LAST:event_m_lapizActionPerformed

    private void m_lineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_lineaActionPerformed
        b_recta.setSelected(true);
        selectForma();
    }//GEN-LAST:event_m_lineaActionPerformed

    private void m_rectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_rectActionPerformed
        b_rectangulo.setSelected(true);
        selectForma();
    }//GEN-LAST:event_m_rectActionPerformed

    private void m_rect_roundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_rect_roundActionPerformed
        b_round_rect.setSelected(true);
        selectForma();
    }//GEN-LAST:event_m_rect_roundActionPerformed

    private void m_elipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_elipseActionPerformed
        b_elipse.setSelected(true);
        selectForma();
    }//GEN-LAST:event_m_elipseActionPerformed

    private void m_curva1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_curva1ActionPerformed
        b_curva1.setSelected(true);
        selectForma();
    }//GEN-LAST:event_m_curva1ActionPerformed

    private void m_curva2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_curva2ActionPerformed
        b_curva2.setSelected(true);
        selectForma();
    }//GEN-LAST:event_m_curva2ActionPerformed

    private void m_textoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_textoActionPerformed
        b_texto.setSelected(true);
        b_textoActionPerformed(null);
    }//GEN-LAST:event_m_textoActionPerformed

    private void m_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_colorActionPerformed
        MouseEvent me = new MouseEvent(m_color, 0, 0, 0, 0, 0, 0, false,MouseEvent.BUTTON1);
        b_selectorColorMouseClicked(me);
    }//GEN-LAST:event_m_colorActionPerformed

    private void m_color2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_color2ActionPerformed
        MouseEvent me = new MouseEvent(m_color2, 0, 0, 0, 0, 0, 0, false,MouseEvent.BUTTON3);
        b_selectorColorMouseClicked(me);
    }//GEN-LAST:event_m_color2ActionPerformed

    private void mas_grosorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mas_grosorActionPerformed
        float f = Float.valueOf(spinner_grosor.getValue().toString()).floatValue();
        if(f>=50) return;
        int i = ((int)f+1);
        spinner_grosor.setValue(i);
    }//GEN-LAST:event_mas_grosorActionPerformed

    private void menos_grosorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos_grosorActionPerformed
        float f = Float.valueOf(spinner_grosor.getValue().toString()).floatValue();
        if(f<=1) return;
        int i = ((int)f-1);
        spinner_grosor.setValue(i);
    }//GEN-LAST:event_menos_grosorActionPerformed

    private void m_punteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_punteoActionPerformed
        check_puntear.setSelected(m_punteo.isSelected());
        if(vlienzo!=null) vlienzo.getLienzo().setPunteo(check_puntear.isSelected());
        vistaPrevia.setPunteo(check_puntear.isSelected());
    }//GEN-LAST:event_m_punteoActionPerformed

    private void mas_transparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mas_transparenciaActionPerformed
        if(sl_transparencia.getValue()>100) return;
        sl_transparencia.setValue(sl_transparencia.getValue()+1);
        sl_transparenciaMouseDragged(null);
    }//GEN-LAST:event_mas_transparenciaActionPerformed

    private void menos_transparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos_transparenciaActionPerformed
        if(sl_transparencia.getValue()<0) return;
        sl_transparencia.setValue(sl_transparencia.getValue()-1);
        sl_transparenciaMouseDragged(null);
    }//GEN-LAST:event_menos_transparenciaActionPerformed

    private void m_rellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_rellenoActionPerformed
        rellenar.setSelected(m_relleno.isSelected());
        if(vlienzo==null) return;
        vlienzo.getLienzo().setRellenar(rellenar.isSelected());
    }//GEN-LAST:event_m_rellenoActionPerformed

    private void m_deghozActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_deghozActionPerformed
        if(!p_degradados.isVisible())
            return;
        deg_horizontal.setSelected(m_deghoz.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.horizontal);
    }//GEN-LAST:event_m_deghozActionPerformed

    private void m_degverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_degverActionPerformed
        if(!p_degradados.isVisible())
            return;
        deg_vertical.setSelected(m_degver.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.vertical);
    }//GEN-LAST:event_m_degverActionPerformed

    private void m_degd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_degd1ActionPerformed
        if(!p_degradados.isVisible())
            return;
        deg_diagonal1.setSelected(m_degd1.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.diagonal1);
    }//GEN-LAST:event_m_degd1ActionPerformed

    private void m_degd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_degd2ActionPerformed
        if(!p_degradados.isVisible())
            return;
        deg_diagonal2.setSelected(m_degd2.isSelected());
        vlienzo.getLienzo().setDegradado(Degradado.diagonal2);
    }//GEN-LAST:event_m_degd2ActionPerformed

    private void mas_tamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mas_tamanioActionPerformed
        float f = Float.valueOf(spinner_size.getValue().toString()).floatValue();
        if(f>=72) return;
        int i = ((int)f+1);
        spinner_size.setValue(i);
    }//GEN-LAST:event_mas_tamanioActionPerformed

    private void menos_tamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos_tamanioActionPerformed
        float f = Float.valueOf(spinner_size.getValue().toString()).floatValue();
        if(f<=1) return;
        int i = ((int)f-1);
        spinner_size.setValue(i);
    }//GEN-LAST:event_menos_tamanioActionPerformed

    private void m_negritaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_negritaActionPerformed
        b_bold.setSelected(m_negrita.isSelected());
        setFontStyle();
    }//GEN-LAST:event_m_negritaActionPerformed

    private void m_cursivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_cursivaActionPerformed
       b_italic.setSelected(m_cursiva.isSelected());
       setFontStyle();
    }//GEN-LAST:event_m_cursivaActionPerformed

    private void selectColor(Color color,int boton) {
        Color c = color;
        Color b = applyAlpha(c);
        if(boton==MouseEvent.BUTTON1){
            vistaPrevia.setForeground(b);
            if(vlienzo!=null) vlienzo.getLienzo().setColor1(b);
        } else if(boton==MouseEvent.BUTTON3){
            vistaPrevia.setFondo(b);
            if(vlienzo!=null) vlienzo.getLienzo().setColor2(b);
        }
    }
    private void esperarConfirmacion(Boolean b){
       if(vlienzo==null){
           v_operaciones.setVisible(false);
           v_confirmacion.setVisible(false);
           return;
       }
       sli_trasladar_alto.setValue(0);
       sli_trasladar_ancho.setValue(0);
       sli_estirar_alto.setValue(0);
       sli_estirar_ancho.setValue(0);
       operaciones.clearSelection();
       estiradores.setVisible(false);
       trasladadores.setVisible(false);
       p_redimension.setVisible(false);
       v_confirmacion.setVisible(b);
       v_operaciones.setVisible(!b);
       //Dimension d;
       //if(b) d = new Dimension(b_operar.getPreferredSize());
       //else  d = new Dimension(set_operaciones.getPreferredSize());
       //d.setSize(d.width+40,d.height+40);
       //v_operaciones.setSize(d);
       //v_operaciones.setPreferredSize(d);
    }

    private Manejador_Escritorio manejador;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JButton aplicar_op;
    private javax.swing.JMenuItem b_abrir;
    private javax.swing.JToggleButton b_actualizar;
    private javax.swing.JMenu b_archivo;
    private javax.swing.JMenu b_atributos;
    private javax.swing.JMenu b_ayuda;
    private javax.swing.JToggleButton b_bold;
    private javax.swing.JButton b_color;
    private javax.swing.JButton b_color1;
    private javax.swing.JButton b_color10;
    private javax.swing.JButton b_color11;
    private javax.swing.JButton b_color12;
    private javax.swing.JButton b_color13;
    private javax.swing.JButton b_color2;
    private javax.swing.JButton b_color3;
    private javax.swing.JButton b_color4;
    private javax.swing.JButton b_color5;
    private javax.swing.JButton b_color6;
    private javax.swing.JButton b_color7;
    private javax.swing.JButton b_color8;
    private javax.swing.JButton b_color9;
    private javax.swing.JToggleButton b_curva1;
    private javax.swing.JToggleButton b_curva2;
    private javax.swing.JButton b_deshacer;
    private javax.swing.JMenu b_editar;
    private javax.swing.JToggleButton b_elipse;
    private javax.swing.JMenu b_formas;
    private javax.swing.JMenuItem b_guardar;
    private javax.swing.JToggleButton b_italic;
    private javax.swing.JToggleButton b_lapiz;
    private javax.swing.JMenuItem b_nuevo;
    private javax.swing.JButton b_ok_estirar;
    private javax.swing.JButton b_ok_redimen;
    private javax.swing.JButton b_ok_trasladar;
    private javax.swing.JToggleButton b_recta;
    private javax.swing.JToggleButton b_rectangulo;
    private javax.swing.JButton b_rehacer;
    private javax.swing.JToggleButton b_round_rect;
    private javax.swing.JMenuItem b_salir;
    private javax.swing.JButton b_selectorColor;
    private javax.swing.JToggleButton b_texto;
    private javax.swing.JMenuBar barra_menu;
    private javax.swing.JRadioButton byn;
    private javax.swing.JCheckBox check_puntear;
    private javax.swing.JPanel colores;
    private javax.swing.JRadioButton contraste;
    private javax.swing.JRadioButton deg_diagonal1;
    private javax.swing.JRadioButton deg_diagonal2;
    private javax.swing.JRadioButton deg_horizontal;
    private javax.swing.JRadioButton deg_vertical;
    private javax.swing.JCheckBox degradado;
    private javax.swing.ButtonGroup degradados;
    private javax.swing.JButton deshacer_op;
    private javax.swing.JRadioButton detect_fr;
    private javax.swing.JRadioButton dibujo;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JPanel estiradores;
    private javax.swing.ButtonGroup formas;
    private javax.swing.JComboBox fuentes;
    private javax.swing.ButtonGroup g_colores;
    private javax.swing.JRadioButton gamma;
    private javax.swing.JLabel l_X;
    private javax.swing.JLabel l_brillo;
    private javax.swing.JRadioButton l_estirar;
    private javax.swing.JLabel l_grosor;
    private javax.swing.JRadioButton l_redimensionar;
    private javax.swing.JLabel l_rotar;
    private javax.swing.JLabel l_transparencia;
    private javax.swing.JLabel l_transparencia1;
    private javax.swing.JRadioButton l_trasladar;
    private javax.swing.JLabel l_zoom;
    private javax.swing.JRadioButton logaritmo;
    private javax.swing.JMenuItem m_actualizar;
    private javax.swing.JMenuItem m_color;
    private javax.swing.JMenuItem m_color2;
    private javax.swing.JCheckBoxMenuItem m_cursiva;
    private javax.swing.JMenuItem m_curva1;
    private javax.swing.JMenuItem m_curva2;
    private javax.swing.JRadioButtonMenuItem m_degd1;
    private javax.swing.JRadioButtonMenuItem m_degd2;
    private javax.swing.JRadioButtonMenuItem m_deghoz;
    private javax.swing.JMenu m_degradados;
    private javax.swing.JRadioButtonMenuItem m_degver;
    private javax.swing.JMenuItem m_deshacer;
    private javax.swing.JMenuItem m_elipse;
    private javax.swing.JMenu m_formato;
    private javax.swing.JMenu m_grosor;
    private javax.swing.JMenuItem m_lapiz;
    private javax.swing.JMenuItem m_linea;
    private javax.swing.JCheckBoxMenuItem m_negrita;
    private javax.swing.JCheckBoxMenuItem m_punteo;
    private javax.swing.JMenuItem m_rect;
    private javax.swing.JMenuItem m_rect_round;
    private javax.swing.JMenuItem m_rehacer;
    private javax.swing.JCheckBoxMenuItem m_relleno;
    private javax.swing.JMenu m_tamanio;
    private javax.swing.JMenuItem m_texto;
    private javax.swing.JMenu m_transparencia;
    private javax.swing.JMenuItem mas_grosor;
    private javax.swing.JMenuItem mas_tamanio;
    private javax.swing.JMenuItem mas_transparencia;
    private javax.swing.JMenuItem menos_grosor;
    private javax.swing.JMenuItem menos_tamanio;
    private javax.swing.JMenuItem menos_transparencia;
    private javax.swing.ButtonGroup menu_degradados;
    private javax.swing.JLabel msg_warning;
    private javax.swing.JRadioButton negativo;
    private javax.swing.ButtonGroup operaciones;
    private javax.swing.JPanel p_basicos;
    private javax.swing.JPanel p_brillo;
    private javax.swing.JPanel p_checkbox_dimensiones;
    private javax.swing.JPanel p_degradados;
    private javax.swing.JPanel p_dimensiones;
    private javax.swing.JPanel p_dimensiones_top;
    private javax.swing.JPanel p_efectos;
    private javax.swing.JPanel p_ok;
    private javax.swing.JTabbedPane p_pestañas;
    private javax.swing.JPanel p_redimension;
    private javax.swing.JPanel p_rotar;
    private javax.swing.JPanel p_slideres;
    private javax.swing.JPanel p_spinners_redim;
    private javax.swing.JPanel p_zoom;
    private javax.swing.JRadioButton realce;
    private javax.swing.JCheckBox rellenar;
    private javax.swing.JRadioButton repujar;
    private javax.swing.JSlider sl_transparencia;
    private javax.swing.JSlider sli_estirar_alto;
    private javax.swing.JSlider sli_estirar_ancho;
    private javax.swing.JSlider sli_trasladar_alto;
    private javax.swing.JSlider sli_trasladar_ancho;
    private javax.swing.JSlider slider_brillo;
    private javax.swing.JSlider slider_rotar;
    private javax.swing.JSlider slider_zoom;
    private javax.swing.JSpinner spinner_alto;
    private javax.swing.JSpinner spinner_ancho;
    private javax.swing.JSpinner spinner_grosor;
    private javax.swing.JSpinner spinner_size;
    private javax.swing.JRadioButton sua_avanzado;
    private javax.swing.JRadioButton sua_simple;
    private javax.swing.JPanel trasladadores;
    private javax.swing.JInternalFrame v_atributos;
    private javax.swing.JInternalFrame v_confirmacion;
    private javax.swing.JInternalFrame v_herramientas;
    private javax.swing.JInternalFrame v_operaciones;
    private paint.VistaPrevia vistaPrevia;
    // End of variables declaration//GEN-END:variables

}
